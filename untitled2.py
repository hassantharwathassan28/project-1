# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1dv1UlzGO7eCM7OnHRmhpT3rHdrqyae1E
"""

import pandas as pd
import matplotlib.pyplot as plt
from matplotlib import style
style.use("bmh")
from matplotlib.pyplot import rcParams
rcParams["figure.figsize"]=30, 10
rcParams["font.size"]= 22

dataset = pd.read_csv("/content/covid_19_clean_complete.csv")

dataset

group_by_date = dataset.groupby("Date").agg({"Confirmed":'sum',"Recovered":"sum","Deaths":"sum"}).reset_index()

group_by_date

x = list(group_by_date.index)
plt.xticks(x, group_by_date['Date'])
plt.plot(x, group_by_date['Confirmed'])
plt.plot(x, group_by_date['Deaths'])
plt.plot(x, group_by_date["Recovered"])
plt.legend(['Confirmed','Deaths','Recovered'], loc ='upper left')

group_by_date.index = pd.to_datetime(group_by_date["Date"])
group_by_month = group_by_date.groupby(pd.Grouper(freq="m")).agg({"Confirmed":'max',"Recovered":"max","Deaths":"max"}).reset_index()

group_by_month

x = list(group_by_month.index)
plt.xticks(x, group_by_month['Date'])
plt.plot(x, group_by_month['Confirmed'])
plt.plot(x, group_by_month['Deaths'])
plt.plot(x, group_by_month["Recovered"])
plt.legend(['Confirmed','Deaths','Recovered'], loc ='upper left')

x = list(group_by_month.index)
plt.xticks(x, group_by_month['Date'])
plt.plot(x, group_by_month['Confirmed']-group_by_month['Deaths']-group_by_month["Recovered"] )
plt.plot(x, group_by_month['Deaths'])
plt.plot(x, group_by_month["Recovered"])
plt.legend(['still sick','Deaths','Recovered'], loc ='upper left')

group_by_countries = dataset[dataset["Date"]  == max(dataset["Date"]) ]
group_by_countries

len(set(group_by_countries["Country/Region"]))

group_by_countries = group_by_countries.groupby('Country/Region').agg({"Confirmed":'sum',"Recovered":"sum","Deaths":"sum"})
group_by_countries

group_by_countries = group_by_countries.sort_values(by="Confirmed", ascending=False)

x = list(range(len(group_by_countries.index)))
plt.xticks(x, group_by_countries.index)

plt.bar(x[:10],group_by_countries["Confirmed"][:10])

dataset.info()

dataset.describe()

dataset

import pandas as pd

dt = pd.read_csv("/content/usa_county_wise.csv")

dt

dt.describe()

dt.info()

dt2 = pd.read_csv("/content/worldometer_data.csv")

dt2

dt2.describe()

dt2.info()

dt2.to_string()

dt2.shape

dt2.isnull().sum()

dt2.isnull()

dt2.corr()

dt2.info()

dt2['NewCases'].describe()

dt2.dtypes

import missingno

missingno.matrix(dt2)

total_missing = dt2.isnull().sum().sum()
total_missing

#dropna()

col_with_na_dropped = dt2.dropna(axis=1)
col_with_na_dropped

print('num of columns in original ds', dt2.shape[1])
print('num of columns left after dropping',col_with_na_dropped.shape[1])
dif = dt2.shape[1] - col_with_na_dropped.shape[1]
print(dif)

dt2.isnull().any()

col_with_nulls = dt2.columns[dt2.isnull().any()]
col_with_nulls

dt2['NewCases'].describe()

dt2['NewCases'].median()
#compute

#impute
import missingno
dt2['NewCases'] = dt2['NewCases'].fillna(dt2['NewCases'].median())

##########################################
dt2['WHO Region'].dtype

dt2['WHO Region'].value_counts(dropna = False)

dt2['WHO Region'].describe()

dt2['WHO Region'].tail()

dt2['WHO Region'].mode()[0]

dt2['WHO Region'] = dt2['WHO Region'].fillna(dt2['WHO Region'].mode()[0])

dt2['WHO Region'].tail()













